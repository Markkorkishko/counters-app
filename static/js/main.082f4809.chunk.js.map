{"version":3,"sources":["delete-modal-form/index.js","delete-modal-form/delete-modal-form.js","delete-modal-button/index.js","delete-modal-button/delete-modal-button.js","counters-item/counters-item.js","counters/counters.js","add-counter-element/add-counter-element.js","total-count/total-count.js","app/App.js","app/index.js","index.js"],"names":["DeleteModalForm","props","onCounterDelete","onHandleHide","counterName","useState","inputedText","setInputedText","Modal","aria-labelledby","centered","Header","Title","id","className","Body","onChange","e","target","value","Footer","Button","onClick","DeleteModalButton","addModalShow","setAddModalShow","show","CountersItem","counterValue","counterDecrement","counterIncrement","onCounterReset","Counters","countersList","blockOfCounters","map","el","key","AddCounterElement","onAddFormSubmit","name","setName","initialValue","setInitialValue","type","placeholder","tempName","tempInitialValue","isNaN","onFormSubmit","TotalCount","onResetTotalCount","reduce","base","elem","App","countersArr","setCountersArr","tempCountersArray","counterIndex","findIndex","slice","push","Math","random","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.082f4809.chunk.js","sourcesContent":["import React from \"react\";\r\nimport DeleteModalForm from \"./delete-modal-form\";\r\n\r\nexport default DeleteModalForm;","import React, {useState} from \"react\";\r\nimport {Modal, Button} from 'react-bootstrap'\r\n\r\nconst DeleteModalForm = (props) => {\r\n    const {onCounterDelete, onHandleHide, counterName} = props;\r\n\r\n    const [inputedText, setInputedText] = useState('');\r\n\r\n    const onDelete = () => {\r\n        if(counterName === inputedText)\r\n            onCounterDelete()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            aria-labelledby=\"Check-WhyDoINeedThat\"\r\n            centered>\r\n\r\n            <Modal.Header /*closeButton*/>\r\n                <Modal.Title id=\"Check-WhyDoINeedThat\" className=\"font-weight-normal\">\r\n                    Enter counter name <strong>{counterName}</strong> to delete it\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <input onChange={(e)=> setInputedText(e.target.value)}/>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button onClick={onHandleHide}>Cancel</Button>\r\n                <Button onClick={onDelete}>Delete</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default DeleteModalForm;\r\n\r\n","import React from \"react\";\r\nimport DeleteModalButton from \"./delete-modal-button\";\r\n\r\nexport default DeleteModalButton;","import React, {useState} from \"react\";\r\nimport DeleteModalForm from \"../delete-modal-form\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst DeleteModalButton = ({onCounterDelete, counterName}) => {\r\n\r\n    const [addModalShow, setAddModalShow]= useState(false);\r\n\r\n    return (\r\n            <div className='float-right'>\r\n                <Button className='btn btn-danger btn-sm'\r\n                        onClick={() => setAddModalShow(true)}>\r\n                    Delete\r\n                </Button>\r\n                <DeleteModalForm\r\n                    counterName={counterName}\r\n                    show = {addModalShow}\r\n                    onCounterDelete={onCounterDelete}\r\n                    onHandleHide = {() => setAddModalShow(false)}/>\r\n                    {/*Чтобы закрыть окно кликнув в любое поле вне окна - переименуй prop onHandleHide в onHide*/}\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default DeleteModalButton;","import React from \"react\";\r\nimport DeleteModalButton from \"../delete-modal-button\";\r\n\r\nconst CountersItem = ({counterName, counterValue, counterDecrement,\r\n                          counterIncrement, onCounterReset, onCounterDelete}) => {\r\n    return(\r\n        <div className='card'>\r\n            <div className='card-body w-50'>\r\n                <article>{counterName}</article>\r\n                <button className='btn btn-primary btn-sm' onClick={counterDecrement}>-</button>\r\n                <span className='badge badge-light'>{counterValue}</span>\r\n                <button className='btn btn-primary btn-sm' onClick={counterIncrement}>+</button>\r\n                <button className='btn btn-secondary btn-sm' onClick={onCounterReset}>Reset {counterName}</button>\r\n                <DeleteModalButton onCounterDelete={onCounterDelete}\r\n                                   counterName={counterName}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountersItem;","import React from \"react\";\r\nimport CountersItem from \"../counters-item/counters-item\";\r\n\r\nconst Counters = ({countersList, counterDecrement, counterIncrement, onCounterReset, onCounterDelete}) => {\r\n    const blockOfCounters = countersList.map((el)=> {\r\n        return (\r\n        <li key={el.id}>\r\n            <CountersItem counterName={el.counterName}\r\n                          counterValue={el.counterValue}\r\n                          counterDecrement={() => counterDecrement(el.id)}\r\n                          counterIncrement={() => counterIncrement(el.id)}\r\n                          onCounterReset={() => onCounterReset(el.id)}\r\n                          onCounterDelete={() => {onCounterDelete(el.id)}}/>\r\n        </li>\r\n        );\r\n    });\r\n    return(\r\n        <div className='mt-3'>\r\n            <div className='text-secondary'>Counters</div>\r\n            <ul>\r\n                {blockOfCounters}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Counters;\r\n","import React, {useState} from \"react\";\r\n\r\nconst AddCounterElement = ({onAddFormSubmit}) => {\r\n    const [name, setName] = useState('');\r\n    const [initialValue, setInitialValue] = useState('');\r\n\r\n    const onFormSubmit = (name, initialValue) =>{\r\n        let tempName = '';\r\n        let tempInitialValue = '';\r\n        (name !== '') ? tempName = name : tempName = 'Unnamed';\r\n        !isNaN(initialValue) ? tempInitialValue = initialValue : tempInitialValue = 0;\r\n        onAddFormSubmit(tempName, tempInitialValue);\r\n        setName('');\r\n        setInitialValue('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <span className='text-secondary'>Add new counter</span>\r\n            <div className='container row w-75'>\r\n                    <input type='text' value={name} placeholder='Name'\r\n                           className='input-group w-auto m-1 pl-1'\r\n                           onChange={(e) => setName(e.target.value)}/>\r\n                    <input type='text' value={initialValue} placeholder='Initial Value'\r\n                           className='input-group w-25 m-1 pl-1'\r\n                           onChange={(e) => setInitialValue(e.target.value)}/>\r\n                    <button className='btn btn-outline-success btn-sm m-1' onClick={() => onFormSubmit(name, initialValue)}>Add\r\n                        counter\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddCounterElement;","import React from \"react\";\r\n\r\nconst TotalCount = ({countersList, onResetTotalCount}) => {\r\n    return(\r\n        <div className='container row h-25 pt-2'>\r\n            <div className='h-100 p-1 mb-2 bg-light text-secondary border-bottom'>Total count</div>\r\n            <span className='h-100 p-1 mb-2 bg-light text-secondary font-weight-bold border-bottom'>{countersList.reduce(((base,elem) => {return  base + elem.counterValue}), 0)}</span>\r\n            <button className='h-100 btn btn-outline-warning btn-sm ml-2 ' onClick={onResetTotalCount}>Reset total count</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TotalCount;","import React, {useState} from 'react';\nimport Counters from \"../counters/counters\";\nimport AddCounterElement from \"../add-counter-element/add-counter-element\";\nimport TotalCount from \"../total-count/total-count\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './app.css';\n\n/*https://github.com/mars/create-react-app-buildpack.git*/\n\nfunction App() {\n\n    const [countersArr, setCountersArr] = useState([]);\n\n    const onResetTotalCount = () => {\n        const tempCountersArray = countersArr.map((el) => ({...el, counterValue: 0}));\n        setCountersArr(tempCountersArray);\n    };\n\n    const counterDecrement = (id) => {\n        const counterIndex = countersArr.findIndex((el) => el.id === id);\n        const tempCountersArray = [...countersArr];\n        if (tempCountersArray[counterIndex].counterValue>0)\n            tempCountersArray[counterIndex].counterValue -= 1;\n        setCountersArr(tempCountersArray);\n    };\n\n    const counterIncrement = (id) => {\n        const counterIndex = countersArr.findIndex((el) => el.id === id);\n        const tempCountersArray = [...countersArr];\n        tempCountersArray[counterIndex].counterValue += 1;\n        setCountersArr(tempCountersArray);\n    };\n\n    const onCounterReset = (id) => {\n        const counterIndex = countersArr.findIndex((el) => el.id === id);\n        const tempCountersArray = [...countersArr];\n        tempCountersArray[counterIndex].counterValue = 0;\n        setCountersArr(tempCountersArray);\n    };\n\n    const onCounterDelete = (id) => {\n        const counterIndex = countersArr.findIndex((el) => el.id === id);\n        const tempCountersArray = [\n            ...countersArr.slice(0, counterIndex),\n            ...countersArr.slice(counterIndex +1),];\n        setCountersArr(tempCountersArray);\n    };\n\n    const onAddFormSubmit = (name, initialValue) => {\n        const tempCountersArray = [...countersArr];\n        tempCountersArray.push({\n            id: Math.random(),\n            counterName: name,\n            counterValue: Number(initialValue)\n        });\n        setCountersArr(tempCountersArray);\n    };\n\n    return (\n        <div className='container mt-3'>\n            <TotalCount         countersList={countersArr}\n                                onResetTotalCount={onResetTotalCount}/>\n\n            <Counters           countersList={countersArr}\n                                counterDecrement={counterDecrement}\n                                counterIncrement={counterIncrement}\n                                onCounterReset={onCounterReset}\n                                onCounterDelete={onCounterDelete}/>\n\n            <AddCounterElement  onAddFormSubmit={onAddFormSubmit}/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport App from \"./App\";\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./app\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}