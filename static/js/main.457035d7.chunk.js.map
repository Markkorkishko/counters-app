{"version":3,"sources":["counters-item/counters-item.js","counters/counters.js","add-counter-element/add-counter-element.js","total-count/total-count.js","app/App.js","app/index.js","index.js"],"names":["CountersItem","counterName","counterValue","counterDecrement","counterIncrement","onCounterReset","onCounterDelete","id","className","onClick","Counters","countersList","blockOfCounters","map","el","key","AddCounterElement","onAddFormSubmit","useState","name","setName","initialValue","setInitialValue","type","value","placeholder","onChange","e","target","tempName","tempInitialValue","isNaN","onFormSubmit","TotalCount","onResetTotalCount","reduce","base","elem","App","countersArr","setCountersArr","tempCountersArray","counterIndex","findIndex","slice","push","Math","random","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.457035d7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './counters-item.css'\r\n\r\nconst CountersItem = ({counterName, counterValue, counterDecrement,\r\n                          counterIncrement, onCounterReset, onCounterDelete}) => {\r\n    return(\r\n        <div>\r\n            <article id='name-style'>{counterName}</article>\r\n            <button className=\"small-buttons\" onClick={counterDecrement}>-</button>\r\n            <article>{counterValue}</article>\r\n            <button className=\"small-buttons\" onClick={counterIncrement}>+</button>\r\n            <button id='reset-button-style' onClick={onCounterReset}>Reset {counterName}</button>\r\n            <button id='delete-button' onClick={onCounterDelete}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountersItem;","import React from \"react\";\r\nimport CountersItem from \"../counters-item/counters-item\";\r\nimport './counters.css';\r\n\r\nconst Counters = ({countersList, counterDecrement, counterIncrement, onCounterReset, onCounterDelete}) => {\r\n    const blockOfCounters = countersList.map((el)=> {\r\n        return (\r\n        <li key={el.id}>\r\n            <CountersItem counterName={el.counterName}\r\n                          counterValue={el.counterValue}\r\n                          counterDecrement={() => counterDecrement(el.id)}\r\n                          counterIncrement={() => counterIncrement(el.id)}\r\n                          onCounterReset={() => onCounterReset(el.id)}\r\n                          onCounterDelete={() => {onCounterDelete(el.id)}}/>\r\n        </li>\r\n        );\r\n    });\r\n    return(\r\n        <div>\r\n            <span>Counters</span>\r\n            <ul>\r\n                {blockOfCounters}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Counters;\r\n","import React, {useState} from \"react\";\r\nimport './add-counter-element.css'\r\n\r\nconst AddCounterElement = ({onAddFormSubmit}) => {\r\n    const [name, setName] = useState('');\r\n    const [initialValue, setInitialValue] = useState('');\r\n\r\n    const onFormSubmit = (name, initialValue) =>{\r\n        let tempName = '';\r\n        let tempInitialValue = '';\r\n        (name !== '') ? tempName = name : tempName = 'Unnamed';\r\n        !isNaN(initialValue) ? tempInitialValue = initialValue : tempInitialValue = 0;\r\n        onAddFormSubmit(tempName, tempInitialValue);\r\n        setName('');\r\n        setInitialValue('');\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <span>Add new counter</span>\r\n            <section>\r\n                <input type='text' value={name} placeholder='Name'\r\n                        onChange={(e) => setName(e.target.value)}/>\r\n                <input id='input-value-style' type='text' value={initialValue} placeholder='Initial Value'\r\n                        onChange={(e) => setInitialValue(e.target.value)}/>\r\n                <button onClick={() => onFormSubmit(name, initialValue)}>Add counter</button>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddCounterElement;","import React from \"react\";\r\nimport './total-count.css';\r\n\r\nconst TotalCount = ({countersList, onResetTotalCount}) => {\r\n    return(\r\n        <div id='total-count-style'>\r\n            <span>Total count</span>\r\n            <article>{countersList.reduce(((base,elem) => {return  base + elem.counterValue}), 0)}</article>\r\n            <button onClick={onResetTotalCount}>Reset total count</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TotalCount;","import React, {useState} from 'react';\nimport Counters from \"../counters/counters\";\nimport AddCounterElement from \"../add-counter-element/add-counter-element\";\nimport TotalCount from \"../total-count/total-count\";\nimport './app.css'\n\nfunction App() {\n\n    const [countersArr, setCountersArr] = useState([]);\n\n    const onResetTotalCount = () => {\n        const tempCountersArray = countersArr.map((el) => ({...el, counterValue: 0}));\n        setCountersArr(tempCountersArray);\n    };\n\n    const counterDecrement = (id) => {\n        const counterIndex = countersArr.findIndex((el) => el.id === id);\n        const tempCountersArray = [...countersArr];\n        if (tempCountersArray[counterIndex].counterValue>0)\n            tempCountersArray[counterIndex].counterValue -= 1;\n        setCountersArr(tempCountersArray);\n    };\n\n    const counterIncrement = (id) => {\n        const counterIndex = countersArr.findIndex((el) => el.id === id);\n        const tempCountersArray = [...countersArr];\n        tempCountersArray[counterIndex].counterValue += 1;\n        setCountersArr(tempCountersArray);\n    };\n\n    const onCounterReset = (id) => {\n        const counterIndex = countersArr.findIndex((el) => el.id === id);\n        const tempCountersArray = [...countersArr];\n        tempCountersArray[counterIndex].counterValue = 0;\n        setCountersArr(tempCountersArray);\n    };\n\n    const onCounterDelete = (id) => {\n        const counterIndex = countersArr.findIndex((el) => el.id === id);\n        const tempCountersArray = [\n            ...countersArr.slice(0, counterIndex),\n            ...countersArr.slice(counterIndex +1),];\n        setCountersArr(tempCountersArray);\n    };\n\n    const onAddFormSubmit = (name, initialValue) => {\n        const tempCountersArray = [...countersArr];\n        tempCountersArray.push({\n            id: Math.random(),\n            counterName: name,\n            counterValue: Number(initialValue)\n        });\n        setCountersArr(tempCountersArray);\n    };\n\n    return (\n        <div id='app-div-style'>\n            <TotalCount         countersList={countersArr}\n                                onResetTotalCount={onResetTotalCount}/>\n\n            <Counters           countersList={countersArr}\n                                counterDecrement={counterDecrement}\n                                counterIncrement={counterIncrement}\n                                onCounterReset={onCounterReset}\n                                onCounterDelete={onCounterDelete}/>\n\n            <AddCounterElement  onAddFormSubmit={onAddFormSubmit}/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport App from \"./App\";\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./app\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}